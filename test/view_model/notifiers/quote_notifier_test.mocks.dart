// Mocks generated by Mockito 5.4.1 from annotations
// in wallofquotes/test/view_model/notifiers/quote_notifier_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wallofquotes/data_sources/firebase_db.dart' as _i3;
import 'package:wallofquotes/model/quote.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseDb].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseDb extends _i1.Mock implements _i3.FirebaseDb {
  MockFirebaseDb() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i2.FirebaseFirestore);
  @override
  _i4.Future<List<_i5.Quote>> fetchQuotes() => (super.noSuchMethod(
        Invocation.method(
          #fetchQuotes,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Quote>>.value(<_i5.Quote>[]),
      ) as _i4.Future<List<_i5.Quote>>);
  @override
  _i4.Future<void> addQuote(_i5.Quote? quote) => (super.noSuchMethod(
        Invocation.method(
          #addQuote,
          [quote],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> updateQuote(_i5.Quote? quote) => (super.noSuchMethod(
        Invocation.method(
          #updateQuote,
          [quote],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
